---
title: "Final Project: Reproducible Research"
author: "Xinyi Zhou, and Wuzhen Han"
date: 11/28/2024
format: 
  pdf:
    include-in-header: 
       text: |
         \usepackage{fvextra}
         \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
include-before-body:
  text: |
    \RecustomVerbatimEnvironment{verbatim}{Verbatim}{
      showspaces = false,
      showtabs = false,
      breaksymbolleft={},
      breaklines
    }
---
### Merge Data 

```{python}
import pandas as pd

real_gdp_path = '/Users/cynthia/Desktop/final-project-xy-wz/data/Real_GDP.csv'
unemployment_rate_path = '/Users/cynthia/Desktop/final-project-xy-wz/data/Unemployment_rate.csv'

real_gdp = pd.read_csv(real_gdp_path)
unemployment_rate = pd.read_csv(unemployment_rate_path)

real_gdp['DATE'] = pd.to_datetime(real_gdp['DATE'])
unemployment_rate['DATE'] = pd.to_datetime(unemployment_rate['DATE'])

merged_data = pd.merge(real_gdp, unemployment_rate, on='DATE', how='left')

save_path = '/Users/cynthia/Desktop/final-project-xy-wz/data/merged_data.csv'
merged_data.to_csv(save_path, index=False)

```

### Data Preprocessing and Static graph

# 1.Bar chart of state-level CARES Act funding distribution

```{python}

import pandas as pd
import matplotlib.pyplot as plt
import altair as alt

file_path = '/Users/wuzhenhan/Desktop/final-project-xy-wz/data/COVID19_Grant_Report.csv' 
data_raw = pd.read_csv(file_path, skiprows=5)

original_number_of_grants = len(data_raw)
print(f"Original Number of Grants: {original_number_of_grants}")

data_raw['Award Funding'] = data_raw['Award Funding'].replace(r'[$,]', '', regex=True).astype(float)

converted_number_of_grants = len(data_raw)
print(f"Number of Grants after 'Award Funding' conversion: {converted_number_of_grants}")

data_cleaned = data_raw.dropna(subset=['State', 'Award Funding'])

cleaned_number_of_grants = len(data_cleaned)
print(f"Number of Grants after dropping NaNs: {cleaned_number_of_grants}")

total_funding_dollars = data_cleaned['Award Funding'].sum()
print(f"Total Award Funding for all grants (Dollars): {total_funding_dollars:,.0f}")

state_funding = data_cleaned.groupby('State')['Award Funding'].sum().reset_index()

state_funding['Award Funding'] = state_funding['Award Funding'] / 1e6  # 单位为百万美元 ($M)

state_funding = state_funding.sort_values(by='Award Funding', ascending=False).reset_index(drop=True)

plt.figure(figsize=(14, 10))
plt.bar(state_funding['State'], state_funding['Award Funding'], color='skyblue')
plt.xlabel('State')
plt.ylabel('Total Award Funding (Millions $)')
plt.title('Total Funding Amount by State')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

print("Top 3 states with the highest funding (in millions):")
print(state_funding.head(3))

```
 

# 2. Economic Trends During COVID-19: Real GDP and Unemployment Rate (2018–2024)

```{python}

gdp_chart = alt.Chart(merged_data).mark_line(color='blue').encode(
    alt.X('DATE:T', title='Date'),
    alt.Y('GDPC1:Q', title='Real GDP (Billion $)', scale=alt.Scale(domain=[merged_data['GDPC1'].min(), merged_data['GDPC1'].max()]))
)

unrate_chart = alt.Chart(merged_data).mark_line(color='orange').encode(
    alt.X('DATE:T', title='Date'),
    alt.Y('UNRATE:Q', title='Unemployment Rate (%)', scale=alt.Scale(domain=[0, merged_data['UNRATE'].max()]))
).properties(
    title="Time Trends: Real GDP and Unemployment Rate (2018–2024)"
)

chart = alt.layer(
    gdp_chart, unrate_chart
).resolve_scale(
    y='independent' 
).properties(
    width=800,
    height=400
)

chart.show()

```

# 3. State-Level Unemployment Rate: Dynamic Heatmap by Time

# 4. Dynamic Trends of Real GDP and Unemployment Rate Under CARES Act